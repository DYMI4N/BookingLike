@model BookingLike.Models.Hotel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Hotel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="autocompleteCity">Miasto</label>
                <input type="text" id="autocompleteCity" class="form-control" placeholder="Wpisz miasto" />
            </div>

            <input type="hidden" asp-for="City" />
            <input type="hidden" asp-for="Country" />


            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContactNumber" class="control-label"></label>
                <input asp-for="ContactNumber" class="form-control" />
                <span asp-validation-for="ContactNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            <div class="form-group">
                <label>Zdjęcie</label>
                <input type="file" name="imageFile" class="form-control" />
            </div>
            @if (ViewBag.ImageError != null)
            {
                <span class="text-danger">@ViewBag.ImageError</span>
            }
            <!-- Przycisk otwierający modal -->
            <button type="button" class="btn btn-outline-dark" data-bs-toggle="modal" data-bs-target="#amenitiesModal">
                Dodaj udogodnienia
            </button>

            <!-- Modal z checkboxami -->
            <div class="modal fade" id="amenitiesModal" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content p-3">
                        <h5 class="mb-3">Udogodnienia</h5>
                        @foreach (var amenity in ViewBag.Amenities as List<SelectListItem>)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="SelectedAmenityIds" value="@amenity.Value" id="amenity_@amenity.Value" />
                                <label class="form-check-label" for="amenity_@amenity.Value">@amenity.Text</label>
                            </div>
                        }
                        <div class="text-end mt-3">
                            <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Zamknij</button>
                        </div>
                    </div>
                </div>
            </div>


        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBudNMCvy-uwHTnSwpsJnugS3jcz5pcU4g&libraries=places"></script>
    <script>
        function initAutocomplete() {
            const input = document.getElementById('autocompleteCity');
            const options = {
                types: ['(cities)'],
                componentRestrictions: { country: 'pl' }
            };
            const autocomplete = new google.maps.places.Autocomplete(input, options);

            autocomplete.addListener('place_changed', function () {
                const place = autocomplete.getPlace();

                let city = '';
                let country = '';
                for (const component of place.address_components) {
                    const types = component.types;
                    if (types.includes('locality')) {
                        city = component.long_name;
                    }
                    if (types.includes('country')) {
                        country = component.long_name;
                    }
                }

                document.querySelector('input[name="City"]').value = city;
                document.querySelector('input[name="Country"]').value = country;
            });
        }

        window.addEventListener('load', initAutocomplete);
    </script>

}
